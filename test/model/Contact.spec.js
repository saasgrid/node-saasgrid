/**
 * Saasgrids CRM grid
 * Saasgrids CRM grid
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@saasgrids.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.crms);
  }
}(this, function(expect, crms) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new crms.Contact();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Contact', function() {
    it('should create an instance of Contact', function() {
      // uncomment below and update the code to test Contact
      //var instane = new crms.Contact();
      //expect(instance).to.be.a(crms.Contact);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property jobTitle (base name: "jobTitle")', function() {
      // uncomment below and update the code to test the property jobTitle
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property department (base name: "department")', function() {
      // uncomment below and update the code to test the property department
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property workNumber (base name: "workNumber")', function() {
      // uncomment below and update the code to test the property workNumber
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property mobileNumber (base name: "mobileNumber")', function() {
      // uncomment below and update the code to test the property mobileNumber
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property zipcode (base name: "zipcode")', function() {
      // uncomment below and update the code to test the property zipcode
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property salesAccountId (base name: "salesAccountId")', function() {
      // uncomment below and update the code to test the property salesAccountId
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property leadSourceId (base name: "leadSourceId")', function() {
      // uncomment below and update the code to test the property leadSourceId
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property ownerId (base name: "ownerId")', function() {
      // uncomment below and update the code to test the property ownerId
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property hasAuthority (base name: "hasAuthority")', function() {
      // uncomment below and update the code to test the property hasAuthority
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property doNotDisturb (base name: "doNotDisturb")', function() {
      // uncomment below and update the code to test the property doNotDisturb
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property facebook (base name: "facebook")', function() {
      // uncomment below and update the code to test the property facebook
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property twitter (base name: "twitter")', function() {
      // uncomment below and update the code to test the property twitter
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property linkedin (base name: "linkedin")', function() {
      // uncomment below and update the code to test the property linkedin
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property companyWebsite (base name: "companyWebsite")', function() {
      // uncomment below and update the code to test the property companyWebsite
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instane = new crms.Contact();
      //expect(instance).to.be();
    });

  });

}));
